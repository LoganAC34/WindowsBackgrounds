# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.4 on Fri Nov  3 14:43:28 2023
#

import wx
# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
"""
This file is a template to copy the tab format from and not intended to be run.
Copy from first panel to last button bind and then after pasting into function, delete all "self." except ones
refer to custom functions or notebook.
"""
# end wxGlade


class wxTabTemplate(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: wxTabTemplate.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((512, 491))
        self.SetTitle("Background Folder Paths")

        self.Profile = wx.Panel(self, wx.ID_ANY)
        """ Start copy from here down to last EVT_BUTTON bind"""

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)

        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(sizer_4, 1, wx.EXPAND, 0)

        database_ID = wx.StaticText(self.Profile, wx.ID_ANY, "ID")
        database_ID.Hide()
        database_ID.SetName('database_id')
        sizer_4.Add(database_ID, 0, wx.ALL, 5)

        self.checkbox_windowsBackgrounds = wx.CheckBox(self.Profile, wx.ID_ANY, "Download Windows Backgrounds")
        sizer_4.Add(self.checkbox_windowsBackgrounds, 0, wx.LEFT | wx.RIGHT | wx.TOP, 15)

        self.list_ctrl_filePaths = wx.ListCtrl(self.Profile, wx.ID_ANY, style=wx.LC_AUTOARRANGE | wx.LC_EDIT_LABELS | wx.LC_HRULES | wx.LC_NO_HEADER | wx.LC_REPORT | wx.LC_SORT_DESCENDING | wx.LC_VRULES)
        self.list_ctrl_filePaths.AppendColumn("Path", format=wx.LIST_FORMAT_LEFT, width=-1)
        sizer_4.Add(self.list_ctrl_filePaths, 1, wx.ALL | wx.EXPAND, 15)

        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_1.Add(sizer_2, 0, wx.BOTTOM | wx.EXPAND | wx.RIGHT | wx.TOP, 15)

        sizer_5 = wx.StaticBoxSizer(wx.StaticBox(self.Profile, wx.ID_ANY, "Profile"), wx.VERTICAL)
        sizer_2.Add(sizer_5, 0, wx.EXPAND, 0)

        self.button_profile_rename = wx.Button(self.Profile, wx.ID_ANY, "Rename")
        self.button_profile_rename.SetMinSize((75, 30))
        sizer_5.Add(self.button_profile_rename, 0, 0, 15)

        self.button_profile_new = wx.Button(self.Profile, wx.ID_NEW, "")
        self.button_profile_new.SetMinSize((75, 30))
        sizer_5.Add(self.button_profile_new, 0, wx.TOP, 15)

        self.button_profile_delete = wx.Button(self.Profile, wx.ID_DELETE, "")
        self.button_profile_delete.SetMinSize((75, 30))
        sizer_5.Add(self.button_profile_delete, 0, wx.TOP, 15)

        sizer_6 = wx.StaticBoxSizer(wx.StaticBox(self.Profile, wx.ID_ANY, "Paths"), wx.VERTICAL)
        sizer_2.Add(sizer_6, 0, wx.EXPAND | wx.TOP, 15)

        self.button_path_add = wx.Button(self.Profile, wx.ID_ADD, "")
        self.button_path_add.SetMinSize((75, 30))
        sizer_6.Add(self.button_path_add, 0, 0, 15)

        self.button_path_remove = wx.Button(self.Profile, wx.ID_REMOVE, "")
        self.button_path_remove.SetMinSize((75, 30))
        sizer_6.Add(self.button_path_remove, 0, wx.TOP, 15)

        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(sizer_7, 1, wx.EXPAND, 0)

        sizer_7.Add((0, 0), 0, 0, 0)

        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(sizer_3, 0, wx.LEFT | wx.RIGHT, 6)

        self.button_apply = wx.Button(self.Profile, wx.ID_APPLY, "")
        self.button_apply.SetMinSize((75, 30))
        sizer_3.Add(self.button_apply, 0, wx.TOP, 15)

        self.button_cancel = wx.Button(self.Profile, wx.ID_CANCEL, "")
        self.button_cancel.SetMinSize((75, 30))
        sizer_3.Add(self.button_cancel, 0, wx.TOP, 15)

        self.Profile.SetSizer(sizer_1)

        self.Layout()
        profile.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGED, self.window_tab_changed, self.notebook_1)

        self.Bind(wx.EVT_CHECKBOX, self.on_checkbox_windows_background, self.checkbox_windowsBackgrounds)
        self.Bind(wx.EVT_LIST_END_LABEL_EDIT, self.on_resize, self.list_ctrl_filePaths)
        self.Bind(wx.EVT_BUTTON, self.onButton_profile_rename, self.button_profile_rename)
        self.Bind(wx.EVT_BUTTON, self.onButton_profile_new, self.button_profile_new)
        self.Bind(wx.EVT_BUTTON, self.onButton_profile_delete, self.button_profile_delete)
        self.Bind(wx.EVT_BUTTON, self.onButton_path_add, self.button_path_add)
        self.Bind(wx.EVT_BUTTON, self.onButton_path_delete, self.button_path_remove)
        self.Bind(wx.EVT_BUTTON, self.onButton_window_apply, self.button_apply)
        self.Bind(wx.EVT_BUTTON, self.onButton_window_cancel, self.button_cancel)
        self.Bind(wx.EVT_SIZE, self.on_resize, self)
        # end wxGlade

    def on_checkbox_windows_background(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'on_checkbox_windows_background' not implemented!")
        event.Skip()

    def on_resize(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'on_resize' not implemented!")
        event.Skip()

    def onButton_profile_rename(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_profile_rename' not implemented!")
        event.Skip()

    def onButton_profile_new(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_profile_new' not implemented!")
        event.Skip()

    def onButton_profile_delete(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_profile_delete' not implemented!")
        event.Skip()

    def onButton_path_add(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_path_add' not implemented!")
        event.Skip()

    def onButton_path_delete(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_path_delete' not implemented!")
        event.Skip()

    def onButton_window_apply(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_window_apply' not implemented!")
        event.Skip()

    def onButton_window_cancel(self, event):  # wxGlade: wxTabTemplate.<event_handler>
        print("Event handler 'onButton_window_cancel' not implemented!")
        event.Skip()

# end of class wxTabTemplate
